# This is a basic workflow to help you get started with Actions
# .github/workflows/deploy.yml
name: Deploy Metaverse
on:
  push:
    branches:
      - master

env:
  Project_Name : githubaction-364720
  Project_Email : githubactionmanager@githubaction-364720.iam.gserviceaccount.com
  Cluster_name : vrspace-two
jobs:
  deploy:
    name: Deploying 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Build and push image to Google Container Registry
      - name: Setting up
        uses: google-github-actions/setup-gcloud@main
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY_JSON }}
          service_account_email: $Project_Email
          export_default_credentials: true
          project_id: $Project_Name
          
#       - name: Building (üèó)
#         run: |-
#           gcloud builds submit \
#             --tag gcr.io/githubaction-364720/cloudaction
            
      - name: Set Local Region
        run: |-
          gcloud config set compute/region us-central1
          
      - name: Create Local Zone
        run: |-
          gcloud config set compute/zone us-central1-b

      - name: Auth Docker
        run: |-
          gcloud auth configure-docker -q
          
      - name: Build Docker
        run: |-
          docker build -t vrspace .
          
      - name: Tag Docker
        run: |-
          docker tag vrspace gcr.io/$Project_Name/vrserver
          
      - name: Push Docker
        run: |-
          docker push gcr.io/$Project_Name/vrserver
            
#       - name: Create a GKE cluster
#         run: |-
#           gcloud container clusters create vrspace-two
          
      - name: Ensure connection GKE cluster
        run: |-
          gcloud container clusters get-credentials vrspace-two
          
      - name: Deploy docker image to GKE cluster
        run: |-
          kubectl create deployment vrspace --image=gcr.io/$Project_Name/vrserver
      
#       - name: Scale it to other pods in the cluster (Optional)
#         run: |-
#           kubectl scale deployment hello-app --replicas=3
      
      - name: Ensure that the deployment is successful
        run: |-
          kubectl get pods
          
      - name: Create Service / Expose deployment to an external IP
        run: |-
          kubectl expose deployment vrspace --name=vrspace-service --type=LoadBalancer --port=8080 --target-port=8080
          
      - name: Get external IP of the deployment
        run: |-
          kubectl get service
            


# # Scale it to other pods in the cluster (Optional)
# kubectl scale deployment hello-app --replicas=3

# # Ensure that the deployment is successful
# kubectl get pods

# # Create Service / Expose deployment to an external IP
# kubectl expose deployment vrspace --name=vrspace-service --type=LoadBalancer --port=80 --target-port=8080

# # Get external IP of the deployment
# kubectl get service
      # Setup gcloud CLI
#       - name: Deploy (üöÄ)
#         uses: google-github-actions/deploy-cloudrun@main
#         with:
#           service: cloudaction
#           image: gcr.io/githubaction-364720/cloudaction
#           region: us-central1
#           credentials: ${{ secrets.GCP_SA_KEY_JSON }}
#           project_id: githubaction-364720
